//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace myWebAspClient.modules_WCFLib {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentModule", Namespace="http://schemas.datacontract.org/2004/07/myWCFClassLibrary")]
    [System.SerializableAttribute()]
    public partial class DepartmentModule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FK_Department_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PK_Module_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string module_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string module_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string termField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FK_Department_id {
            get {
                return this.FK_Department_idField;
            }
            set {
                if ((this.FK_Department_idField.Equals(value) != true)) {
                    this.FK_Department_idField = value;
                    this.RaisePropertyChanged("FK_Department_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PK_Module_id {
            get {
                return this.PK_Module_idField;
            }
            set {
                if ((this.PK_Module_idField.Equals(value) != true)) {
                    this.PK_Module_idField = value;
                    this.RaisePropertyChanged("PK_Module_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string module_code {
            get {
                return this.module_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.module_codeField, value) != true)) {
                    this.module_codeField = value;
                    this.RaisePropertyChanged("module_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string module_name {
            get {
                return this.module_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.module_nameField, value) != true)) {
                    this.module_nameField = value;
                    this.RaisePropertyChanged("module_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string term {
            get {
                return this.termField;
            }
            set {
                if ((object.ReferenceEquals(this.termField, value) != true)) {
                    this.termField = value;
                    this.RaisePropertyChanged("term");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="modules_WCFLib.IModules")]
    public interface IModules {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModules/GetAllModulesByProfessor", ReplyAction="http://tempuri.org/IModules/GetAllModulesByProfessorResponse")]
        myWebAspClient.modules_WCFLib.DepartmentModule[] GetAllModulesByProfessor(int ProfessorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModules/GetAllModulesByProfessor", ReplyAction="http://tempuri.org/IModules/GetAllModulesByProfessorResponse")]
        System.Threading.Tasks.Task<myWebAspClient.modules_WCFLib.DepartmentModule[]> GetAllModulesByProfessorAsync(int ProfessorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModules/GetAllModulesByStudent", ReplyAction="http://tempuri.org/IModules/GetAllModulesByStudentResponse")]
        myWebAspClient.modules_WCFLib.DepartmentModule[] GetAllModulesByStudent(int StudentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModules/GetAllModulesByStudent", ReplyAction="http://tempuri.org/IModules/GetAllModulesByStudentResponse")]
        System.Threading.Tasks.Task<myWebAspClient.modules_WCFLib.DepartmentModule[]> GetAllModulesByStudentAsync(int StudentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModulesChannel : myWebAspClient.modules_WCFLib.IModules, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModulesClient : System.ServiceModel.ClientBase<myWebAspClient.modules_WCFLib.IModules>, myWebAspClient.modules_WCFLib.IModules {
        
        public ModulesClient() {
        }
        
        public ModulesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModulesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModulesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModulesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public myWebAspClient.modules_WCFLib.DepartmentModule[] GetAllModulesByProfessor(int ProfessorId) {
            return base.Channel.GetAllModulesByProfessor(ProfessorId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.modules_WCFLib.DepartmentModule[]> GetAllModulesByProfessorAsync(int ProfessorId) {
            return base.Channel.GetAllModulesByProfessorAsync(ProfessorId);
        }
        
        public myWebAspClient.modules_WCFLib.DepartmentModule[] GetAllModulesByStudent(int StudentId) {
            return base.Channel.GetAllModulesByStudent(StudentId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.modules_WCFLib.DepartmentModule[]> GetAllModulesByStudentAsync(int StudentId) {
            return base.Channel.GetAllModulesByStudentAsync(StudentId);
        }
    }
}
