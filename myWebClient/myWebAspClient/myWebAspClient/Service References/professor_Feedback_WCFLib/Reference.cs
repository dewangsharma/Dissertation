//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace myWebAspClient.professor_Feedback_WCFLib {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="feedbackModel", Namespace="http://schemas.datacontract.org/2004/07/myWCFClassLibrary.Professor")]
    [System.SerializableAttribute()]
    public partial class feedbackModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_Lecture_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PK_Feedback_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float feedback_valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_Lecture_id {
            get {
                return this.FK_Lecture_idField;
            }
            set {
                if ((this.FK_Lecture_idField.Equals(value) != true)) {
                    this.FK_Lecture_idField = value;
                    this.RaisePropertyChanged("FK_Lecture_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PK_Feedback_id {
            get {
                return this.PK_Feedback_idField;
            }
            set {
                if ((this.PK_Feedback_idField.Equals(value) != true)) {
                    this.PK_Feedback_idField = value;
                    this.RaisePropertyChanged("PK_Feedback_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_date {
            get {
                return this.end_dateField;
            }
            set {
                if ((this.end_dateField.Equals(value) != true)) {
                    this.end_dateField = value;
                    this.RaisePropertyChanged("end_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float feedback_value {
            get {
                return this.feedback_valueField;
            }
            set {
                if ((this.feedback_valueField.Equals(value) != true)) {
                    this.feedback_valueField = value;
                    this.RaisePropertyChanged("feedback_value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="lectureModel", Namespace="http://schemas.datacontract.org/2004/07/myWCFClassLibrary.Professor")]
    [System.SerializableAttribute()]
    public partial class lectureModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_Module_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_Professor_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PK_Lecture_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime lecture_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lecture_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan lecture_timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lecture_titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_Module_id {
            get {
                return this.FK_Module_idField;
            }
            set {
                if ((this.FK_Module_idField.Equals(value) != true)) {
                    this.FK_Module_idField = value;
                    this.RaisePropertyChanged("FK_Module_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_Professor_id {
            get {
                return this.FK_Professor_idField;
            }
            set {
                if ((this.FK_Professor_idField.Equals(value) != true)) {
                    this.FK_Professor_idField = value;
                    this.RaisePropertyChanged("FK_Professor_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PK_Lecture_id {
            get {
                return this.PK_Lecture_idField;
            }
            set {
                if ((this.PK_Lecture_idField.Equals(value) != true)) {
                    this.PK_Lecture_idField = value;
                    this.RaisePropertyChanged("PK_Lecture_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lecture_date {
            get {
                return this.lecture_dateField;
            }
            set {
                if ((this.lecture_dateField.Equals(value) != true)) {
                    this.lecture_dateField = value;
                    this.RaisePropertyChanged("lecture_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lecture_status {
            get {
                return this.lecture_statusField;
            }
            set {
                if ((this.lecture_statusField.Equals(value) != true)) {
                    this.lecture_statusField = value;
                    this.RaisePropertyChanged("lecture_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan lecture_time {
            get {
                return this.lecture_timeField;
            }
            set {
                if ((this.lecture_timeField.Equals(value) != true)) {
                    this.lecture_timeField = value;
                    this.RaisePropertyChanged("lecture_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lecture_title {
            get {
                return this.lecture_titleField;
            }
            set {
                if ((object.ReferenceEquals(this.lecture_titleField, value) != true)) {
                    this.lecture_titleField = value;
                    this.RaisePropertyChanged("lecture_title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="professor_Feedback_WCFLib.IProfessorFeedback")]
    public interface IProfessorFeedback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/createFeedback", ReplyAction="http://tempuri.org/IProfessorFeedback/createFeedbackResponse")]
        int createFeedback(myWebAspClient.professor_Feedback_WCFLib.feedbackModel feedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/createFeedback", ReplyAction="http://tempuri.org/IProfessorFeedback/createFeedbackResponse")]
        System.Threading.Tasks.Task<int> createFeedbackAsync(myWebAspClient.professor_Feedback_WCFLib.feedbackModel feedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/GetFeedbackByProfessor", ReplyAction="http://tempuri.org/IProfessorFeedback/GetFeedbackByProfessorResponse")]
        myWebAspClient.professor_Feedback_WCFLib.feedbackModel[] GetFeedbackByProfessor(int ProfId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/GetFeedbackByProfessor", ReplyAction="http://tempuri.org/IProfessorFeedback/GetFeedbackByProfessorResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Feedback_WCFLib.feedbackModel[]> GetFeedbackByProfessorAsync(int ProfId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/createLecture", ReplyAction="http://tempuri.org/IProfessorFeedback/createLectureResponse")]
        int createLecture(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData, bool feed, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/createLecture", ReplyAction="http://tempuri.org/IProfessorFeedback/createLectureResponse")]
        System.Threading.Tasks.Task<int> createLectureAsync(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData, bool feed, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/GetLecturesByProfessor", ReplyAction="http://tempuri.org/IProfessorFeedback/GetLecturesByProfessorResponse")]
        myWebAspClient.professor_Feedback_WCFLib.lectureModel[] GetLecturesByProfessor(int ProfId, int isFeed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/GetLecturesByProfessor", ReplyAction="http://tempuri.org/IProfessorFeedback/GetLecturesByProfessorResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Feedback_WCFLib.lectureModel[]> GetLecturesByProfessorAsync(int ProfId, int isFeed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/updateLecture", ReplyAction="http://tempuri.org/IProfessorFeedback/updateLectureResponse")]
        bool updateLecture(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorFeedback/updateLecture", ReplyAction="http://tempuri.org/IProfessorFeedback/updateLectureResponse")]
        System.Threading.Tasks.Task<bool> updateLectureAsync(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfessorFeedbackChannel : myWebAspClient.professor_Feedback_WCFLib.IProfessorFeedback, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfessorFeedbackClient : System.ServiceModel.ClientBase<myWebAspClient.professor_Feedback_WCFLib.IProfessorFeedback>, myWebAspClient.professor_Feedback_WCFLib.IProfessorFeedback {
        
        public ProfessorFeedbackClient() {
        }
        
        public ProfessorFeedbackClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfessorFeedbackClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfessorFeedbackClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfessorFeedbackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int createFeedback(myWebAspClient.professor_Feedback_WCFLib.feedbackModel feedData) {
            return base.Channel.createFeedback(feedData);
        }
        
        public System.Threading.Tasks.Task<int> createFeedbackAsync(myWebAspClient.professor_Feedback_WCFLib.feedbackModel feedData) {
            return base.Channel.createFeedbackAsync(feedData);
        }
        
        public myWebAspClient.professor_Feedback_WCFLib.feedbackModel[] GetFeedbackByProfessor(int ProfId) {
            return base.Channel.GetFeedbackByProfessor(ProfId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Feedback_WCFLib.feedbackModel[]> GetFeedbackByProfessorAsync(int ProfId) {
            return base.Channel.GetFeedbackByProfessorAsync(ProfId);
        }
        
        public int createLecture(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData, bool feed, System.DateTime endDate) {
            return base.Channel.createLecture(lectureData, feed, endDate);
        }
        
        public System.Threading.Tasks.Task<int> createLectureAsync(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData, bool feed, System.DateTime endDate) {
            return base.Channel.createLectureAsync(lectureData, feed, endDate);
        }
        
        public myWebAspClient.professor_Feedback_WCFLib.lectureModel[] GetLecturesByProfessor(int ProfId, int isFeed) {
            return base.Channel.GetLecturesByProfessor(ProfId, isFeed);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Feedback_WCFLib.lectureModel[]> GetLecturesByProfessorAsync(int ProfId, int isFeed) {
            return base.Channel.GetLecturesByProfessorAsync(ProfId, isFeed);
        }
        
        public bool updateLecture(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData) {
            return base.Channel.updateLecture(lectureData);
        }
        
        public System.Threading.Tasks.Task<bool> updateLectureAsync(myWebAspClient.professor_Feedback_WCFLib.lectureModel lectureData) {
            return base.Channel.updateLectureAsync(lectureData);
        }
    }
}
