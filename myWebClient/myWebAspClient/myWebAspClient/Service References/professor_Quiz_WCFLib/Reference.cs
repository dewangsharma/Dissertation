//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace myWebAspClient.professor_Quiz_WCFLib {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="quizModel", Namespace="http://schemas.datacontract.org/2004/07/myWCFClassLibrary.Professor")]
    [System.SerializableAttribute()]
    public partial class quizModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_Professor_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PK_Quiz_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isTimeupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private myWebAspClient.professor_Quiz_WCFLib.questionModel[] questionModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime quiz_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime quiz_end_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float quiz_lengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quiz_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string quiz_titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime quiz_updateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float quiz_weightageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_ModuleId {
            get {
                return this.FK_ModuleIdField;
            }
            set {
                if ((this.FK_ModuleIdField.Equals(value) != true)) {
                    this.FK_ModuleIdField = value;
                    this.RaisePropertyChanged("FK_ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_Professor_id {
            get {
                return this.FK_Professor_idField;
            }
            set {
                if ((this.FK_Professor_idField.Equals(value) != true)) {
                    this.FK_Professor_idField = value;
                    this.RaisePropertyChanged("FK_Professor_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PK_Quiz_id {
            get {
                return this.PK_Quiz_idField;
            }
            set {
                if ((this.PK_Quiz_idField.Equals(value) != true)) {
                    this.PK_Quiz_idField = value;
                    this.RaisePropertyChanged("PK_Quiz_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isTimeup {
            get {
                return this.isTimeupField;
            }
            set {
                if ((this.isTimeupField.Equals(value) != true)) {
                    this.isTimeupField = value;
                    this.RaisePropertyChanged("isTimeup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public myWebAspClient.professor_Quiz_WCFLib.questionModel[] questionModel {
            get {
                return this.questionModelField;
            }
            set {
                if ((object.ReferenceEquals(this.questionModelField, value) != true)) {
                    this.questionModelField = value;
                    this.RaisePropertyChanged("questionModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime quiz_date {
            get {
                return this.quiz_dateField;
            }
            set {
                if ((this.quiz_dateField.Equals(value) != true)) {
                    this.quiz_dateField = value;
                    this.RaisePropertyChanged("quiz_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime quiz_end_date {
            get {
                return this.quiz_end_dateField;
            }
            set {
                if ((this.quiz_end_dateField.Equals(value) != true)) {
                    this.quiz_end_dateField = value;
                    this.RaisePropertyChanged("quiz_end_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float quiz_length {
            get {
                return this.quiz_lengthField;
            }
            set {
                if ((this.quiz_lengthField.Equals(value) != true)) {
                    this.quiz_lengthField = value;
                    this.RaisePropertyChanged("quiz_length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quiz_status {
            get {
                return this.quiz_statusField;
            }
            set {
                if ((this.quiz_statusField.Equals(value) != true)) {
                    this.quiz_statusField = value;
                    this.RaisePropertyChanged("quiz_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string quiz_title {
            get {
                return this.quiz_titleField;
            }
            set {
                if ((object.ReferenceEquals(this.quiz_titleField, value) != true)) {
                    this.quiz_titleField = value;
                    this.RaisePropertyChanged("quiz_title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime quiz_update {
            get {
                return this.quiz_updateField;
            }
            set {
                if ((this.quiz_updateField.Equals(value) != true)) {
                    this.quiz_updateField = value;
                    this.RaisePropertyChanged("quiz_update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float quiz_weightage {
            get {
                return this.quiz_weightageField;
            }
            set {
                if ((this.quiz_weightageField.Equals(value) != true)) {
                    this.quiz_weightageField = value;
                    this.RaisePropertyChanged("quiz_weightage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="questionModel", Namespace="http://schemas.datacontract.org/2004/07/myWCFClassLibrary.Professor")]
    [System.SerializableAttribute()]
    public partial class questionModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_Quiz_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PK_Question_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private myWebAspClient.professor_Quiz_WCFLib.optionModel[] optionModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string questionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string question_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private myWebAspClient.professor_Quiz_WCFLib.quizModel quizModelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_Quiz_id {
            get {
                return this.FK_Quiz_idField;
            }
            set {
                if ((this.FK_Quiz_idField.Equals(value) != true)) {
                    this.FK_Quiz_idField = value;
                    this.RaisePropertyChanged("FK_Quiz_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PK_Question_id {
            get {
                return this.PK_Question_idField;
            }
            set {
                if ((this.PK_Question_idField.Equals(value) != true)) {
                    this.PK_Question_idField = value;
                    this.RaisePropertyChanged("PK_Question_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hint {
            get {
                return this.hintField;
            }
            set {
                if ((object.ReferenceEquals(this.hintField, value) != true)) {
                    this.hintField = value;
                    this.RaisePropertyChanged("hint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double marks {
            get {
                return this.marksField;
            }
            set {
                if ((this.marksField.Equals(value) != true)) {
                    this.marksField = value;
                    this.RaisePropertyChanged("marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public myWebAspClient.professor_Quiz_WCFLib.optionModel[] optionModel {
            get {
                return this.optionModelField;
            }
            set {
                if ((object.ReferenceEquals(this.optionModelField, value) != true)) {
                    this.optionModelField = value;
                    this.RaisePropertyChanged("optionModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string question {
            get {
                return this.questionField;
            }
            set {
                if ((object.ReferenceEquals(this.questionField, value) != true)) {
                    this.questionField = value;
                    this.RaisePropertyChanged("question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string question_type {
            get {
                return this.question_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.question_typeField, value) != true)) {
                    this.question_typeField = value;
                    this.RaisePropertyChanged("question_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public myWebAspClient.professor_Quiz_WCFLib.quizModel quizModel {
            get {
                return this.quizModelField;
            }
            set {
                if ((object.ReferenceEquals(this.quizModelField, value) != true)) {
                    this.quizModelField = value;
                    this.RaisePropertyChanged("quizModel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="optionModel", Namespace="http://schemas.datacontract.org/2004/07/myWCFClassLibrary.Professor")]
    [System.SerializableAttribute()]
    public partial class optionModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_Question_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PK_Option_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string option_valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_Question_id {
            get {
                return this.FK_Question_idField;
            }
            set {
                if ((this.FK_Question_idField.Equals(value) != true)) {
                    this.FK_Question_idField = value;
                    this.RaisePropertyChanged("FK_Question_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PK_Option_id {
            get {
                return this.PK_Option_idField;
            }
            set {
                if ((this.PK_Option_idField.Equals(value) != true)) {
                    this.PK_Option_idField = value;
                    this.RaisePropertyChanged("PK_Option_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isAnswer {
            get {
                return this.isAnswerField;
            }
            set {
                if ((this.isAnswerField.Equals(value) != true)) {
                    this.isAnswerField = value;
                    this.RaisePropertyChanged("isAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string option_value {
            get {
                return this.option_valueField;
            }
            set {
                if ((object.ReferenceEquals(this.option_valueField, value) != true)) {
                    this.option_valueField = value;
                    this.RaisePropertyChanged("option_value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="professor_Quiz_WCFLib.IProfessorQuiz")]
    public interface IProfessorQuiz {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/CreateQuiz", ReplyAction="http://tempuri.org/IProfessorQuiz/CreateQuizResponse")]
        int CreateQuiz(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/CreateQuiz", ReplyAction="http://tempuri.org/IProfessorQuiz/CreateQuizResponse")]
        System.Threading.Tasks.Task<int> CreateQuizAsync(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/UpdateQuiz", ReplyAction="http://tempuri.org/IProfessorQuiz/UpdateQuizResponse")]
        bool UpdateQuiz(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/UpdateQuiz", ReplyAction="http://tempuri.org/IProfessorQuiz/UpdateQuizResponse")]
        System.Threading.Tasks.Task<bool> UpdateQuizAsync(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetQuizById", ReplyAction="http://tempuri.org/IProfessorQuiz/GetQuizByIdResponse")]
        myWebAspClient.professor_Quiz_WCFLib.quizModel GetQuizById(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetQuizById", ReplyAction="http://tempuri.org/IProfessorQuiz/GetQuizByIdResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.quizModel> GetQuizByIdAsync(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllQuizByProf", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllQuizByProfResponse")]
        myWebAspClient.professor_Quiz_WCFLib.quizModel[] GetAllQuizByProf(int profId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllQuizByProf", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllQuizByProfResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.quizModel[]> GetAllQuizByProfAsync(int profId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllQuizByModule", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllQuizByModuleResponse")]
        myWebAspClient.professor_Quiz_WCFLib.quizModel[] GetAllQuizByModule(int moduleId, int profId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllQuizByModule", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllQuizByModuleResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.quizModel[]> GetAllQuizByModuleAsync(int moduleId, int profId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/CreateQuestion", ReplyAction="http://tempuri.org/IProfessorQuiz/CreateQuestionResponse")]
        int CreateQuestion(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/CreateQuestion", ReplyAction="http://tempuri.org/IProfessorQuiz/CreateQuestionResponse")]
        System.Threading.Tasks.Task<int> CreateQuestionAsync(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/Question_Create", ReplyAction="http://tempuri.org/IProfessorQuiz/Question_CreateResponse")]
        int Question_Create(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/Question_Create", ReplyAction="http://tempuri.org/IProfessorQuiz/Question_CreateResponse")]
        System.Threading.Tasks.Task<int> Question_CreateAsync(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/UpdateQuestion", ReplyAction="http://tempuri.org/IProfessorQuiz/UpdateQuestionResponse")]
        bool UpdateQuestion(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/UpdateQuestion", ReplyAction="http://tempuri.org/IProfessorQuiz/UpdateQuestionResponse")]
        System.Threading.Tasks.Task<bool> UpdateQuestionAsync(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/DeleteQuestion", ReplyAction="http://tempuri.org/IProfessorQuiz/DeleteQuestionResponse")]
        bool DeleteQuestion(int quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/DeleteQuestion", ReplyAction="http://tempuri.org/IProfessorQuiz/DeleteQuestionResponse")]
        System.Threading.Tasks.Task<bool> DeleteQuestionAsync(int quesData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetQuestionById", ReplyAction="http://tempuri.org/IProfessorQuiz/GetQuestionByIdResponse")]
        myWebAspClient.professor_Quiz_WCFLib.questionModel GetQuestionById(int quesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetQuestionById", ReplyAction="http://tempuri.org/IProfessorQuiz/GetQuestionByIdResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.questionModel> GetQuestionByIdAsync(int quesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllQuestionByQuiz", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllQuestionByQuizResponse")]
        myWebAspClient.professor_Quiz_WCFLib.questionModel[] GetAllQuestionByQuiz(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllQuestionByQuiz", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllQuestionByQuizResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.questionModel[]> GetAllQuestionByQuizAsync(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/CreateOption", ReplyAction="http://tempuri.org/IProfessorQuiz/CreateOptionResponse")]
        bool CreateOption(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/CreateOption", ReplyAction="http://tempuri.org/IProfessorQuiz/CreateOptionResponse")]
        System.Threading.Tasks.Task<bool> CreateOptionAsync(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/UpdateOption", ReplyAction="http://tempuri.org/IProfessorQuiz/UpdateOptionResponse")]
        bool UpdateOption(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/UpdateOption", ReplyAction="http://tempuri.org/IProfessorQuiz/UpdateOptionResponse")]
        System.Threading.Tasks.Task<bool> UpdateOptionAsync(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetOptionById", ReplyAction="http://tempuri.org/IProfessorQuiz/GetOptionByIdResponse")]
        myWebAspClient.professor_Quiz_WCFLib.optionModel GetOptionById(int optId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetOptionById", ReplyAction="http://tempuri.org/IProfessorQuiz/GetOptionByIdResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.optionModel> GetOptionByIdAsync(int optId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllOptionByQues", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllOptionByQuesResponse")]
        myWebAspClient.professor_Quiz_WCFLib.optionModel[] GetAllOptionByQues(int quesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/GetAllOptionByQues", ReplyAction="http://tempuri.org/IProfessorQuiz/GetAllOptionByQuesResponse")]
        System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.optionModel[]> GetAllOptionByQuesAsync(int quesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/DeleteOptionByOptionId", ReplyAction="http://tempuri.org/IProfessorQuiz/DeleteOptionByOptionIdResponse")]
        bool DeleteOptionByOptionId(int[] optionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorQuiz/DeleteOptionByOptionId", ReplyAction="http://tempuri.org/IProfessorQuiz/DeleteOptionByOptionIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteOptionByOptionIdAsync(int[] optionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfessorQuizChannel : myWebAspClient.professor_Quiz_WCFLib.IProfessorQuiz, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfessorQuizClient : System.ServiceModel.ClientBase<myWebAspClient.professor_Quiz_WCFLib.IProfessorQuiz>, myWebAspClient.professor_Quiz_WCFLib.IProfessorQuiz {
        
        public ProfessorQuizClient() {
        }
        
        public ProfessorQuizClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfessorQuizClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfessorQuizClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfessorQuizClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateQuiz(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData) {
            return base.Channel.CreateQuiz(quizData);
        }
        
        public System.Threading.Tasks.Task<int> CreateQuizAsync(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData) {
            return base.Channel.CreateQuizAsync(quizData);
        }
        
        public bool UpdateQuiz(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData) {
            return base.Channel.UpdateQuiz(quizData);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateQuizAsync(myWebAspClient.professor_Quiz_WCFLib.quizModel quizData) {
            return base.Channel.UpdateQuizAsync(quizData);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.quizModel GetQuizById(int quizId) {
            return base.Channel.GetQuizById(quizId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.quizModel> GetQuizByIdAsync(int quizId) {
            return base.Channel.GetQuizByIdAsync(quizId);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.quizModel[] GetAllQuizByProf(int profId, int status) {
            return base.Channel.GetAllQuizByProf(profId, status);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.quizModel[]> GetAllQuizByProfAsync(int profId, int status) {
            return base.Channel.GetAllQuizByProfAsync(profId, status);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.quizModel[] GetAllQuizByModule(int moduleId, int profId) {
            return base.Channel.GetAllQuizByModule(moduleId, profId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.quizModel[]> GetAllQuizByModuleAsync(int moduleId, int profId) {
            return base.Channel.GetAllQuizByModuleAsync(moduleId, profId);
        }
        
        public int CreateQuestion(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData) {
            return base.Channel.CreateQuestion(quesData);
        }
        
        public System.Threading.Tasks.Task<int> CreateQuestionAsync(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData) {
            return base.Channel.CreateQuestionAsync(quesData);
        }
        
        public int Question_Create(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData) {
            return base.Channel.Question_Create(quesData);
        }
        
        public System.Threading.Tasks.Task<int> Question_CreateAsync(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData) {
            return base.Channel.Question_CreateAsync(quesData);
        }
        
        public bool UpdateQuestion(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData) {
            return base.Channel.UpdateQuestion(quesData);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateQuestionAsync(myWebAspClient.professor_Quiz_WCFLib.questionModel quesData) {
            return base.Channel.UpdateQuestionAsync(quesData);
        }
        
        public bool DeleteQuestion(int quesData) {
            return base.Channel.DeleteQuestion(quesData);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteQuestionAsync(int quesData) {
            return base.Channel.DeleteQuestionAsync(quesData);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.questionModel GetQuestionById(int quesId) {
            return base.Channel.GetQuestionById(quesId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.questionModel> GetQuestionByIdAsync(int quesId) {
            return base.Channel.GetQuestionByIdAsync(quesId);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.questionModel[] GetAllQuestionByQuiz(int quizId) {
            return base.Channel.GetAllQuestionByQuiz(quizId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.questionModel[]> GetAllQuestionByQuizAsync(int quizId) {
            return base.Channel.GetAllQuestionByQuizAsync(quizId);
        }
        
        public bool CreateOption(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData) {
            return base.Channel.CreateOption(optionData);
        }
        
        public System.Threading.Tasks.Task<bool> CreateOptionAsync(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData) {
            return base.Channel.CreateOptionAsync(optionData);
        }
        
        public bool UpdateOption(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData) {
            return base.Channel.UpdateOption(optionData);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOptionAsync(myWebAspClient.professor_Quiz_WCFLib.optionModel optionData) {
            return base.Channel.UpdateOptionAsync(optionData);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.optionModel GetOptionById(int optId) {
            return base.Channel.GetOptionById(optId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.optionModel> GetOptionByIdAsync(int optId) {
            return base.Channel.GetOptionByIdAsync(optId);
        }
        
        public myWebAspClient.professor_Quiz_WCFLib.optionModel[] GetAllOptionByQues(int quesId) {
            return base.Channel.GetAllOptionByQues(quesId);
        }
        
        public System.Threading.Tasks.Task<myWebAspClient.professor_Quiz_WCFLib.optionModel[]> GetAllOptionByQuesAsync(int quesId) {
            return base.Channel.GetAllOptionByQuesAsync(quesId);
        }
        
        public bool DeleteOptionByOptionId(int[] optionId) {
            return base.Channel.DeleteOptionByOptionId(optionId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOptionByOptionIdAsync(int[] optionId) {
            return base.Channel.DeleteOptionByOptionIdAsync(optionId);
        }
    }
}
