//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace myWebAspClient.account_WCFLib {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="account_WCFLib.ILogin")]
    public interface ILogin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/userLogin", ReplyAction="http://tempuri.org/ILogin/userLoginResponse")]
        string[] userLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/userLogin", ReplyAction="http://tempuri.org/ILogin/userLoginResponse")]
        System.Threading.Tasks.Task<string[]> userLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/passwordReset", ReplyAction="http://tempuri.org/ILogin/passwordResetResponse")]
        string passwordReset(string username, string currentPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/passwordReset", ReplyAction="http://tempuri.org/ILogin/passwordResetResponse")]
        System.Threading.Tasks.Task<string> passwordResetAsync(string username, string currentPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/accountVerification", ReplyAction="http://tempuri.org/ILogin/accountVerificationResponse")]
        string accountVerification(string username, string verification, bool role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/accountVerification", ReplyAction="http://tempuri.org/ILogin/accountVerificationResponse")]
        System.Threading.Tasks.Task<string> accountVerificationAsync(string username, string verification, bool role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/verificationResend", ReplyAction="http://tempuri.org/ILogin/verificationResendResponse")]
        bool verificationResend(string username, bool role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/verificationResend", ReplyAction="http://tempuri.org/ILogin/verificationResendResponse")]
        System.Threading.Tasks.Task<bool> verificationResendAsync(string username, bool role);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginChannel : myWebAspClient.account_WCFLib.ILogin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginClient : System.ServiceModel.ClientBase<myWebAspClient.account_WCFLib.ILogin>, myWebAspClient.account_WCFLib.ILogin {
        
        public LoginClient() {
        }
        
        public LoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] userLogin(string username, string password) {
            return base.Channel.userLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<string[]> userLoginAsync(string username, string password) {
            return base.Channel.userLoginAsync(username, password);
        }
        
        public string passwordReset(string username, string currentPass, string newPass) {
            return base.Channel.passwordReset(username, currentPass, newPass);
        }
        
        public System.Threading.Tasks.Task<string> passwordResetAsync(string username, string currentPass, string newPass) {
            return base.Channel.passwordResetAsync(username, currentPass, newPass);
        }
        
        public string accountVerification(string username, string verification, bool role) {
            return base.Channel.accountVerification(username, verification, role);
        }
        
        public System.Threading.Tasks.Task<string> accountVerificationAsync(string username, string verification, bool role) {
            return base.Channel.accountVerificationAsync(username, verification, role);
        }
        
        public bool verificationResend(string username, bool role) {
            return base.Channel.verificationResend(username, role);
        }
        
        public System.Threading.Tasks.Task<bool> verificationResendAsync(string username, bool role) {
            return base.Channel.verificationResendAsync(username, role);
        }
    }
}
